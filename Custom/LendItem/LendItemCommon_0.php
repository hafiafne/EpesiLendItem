<?php
 
defined("_VALID_ACCESS") || die('Direct access forbidden');
 
class Custom_LendItemCommon extends ModuleCommon {
 
	// display module on menu
	public static function menu() {
	
		return array(__('CRM')=>array('__submenu__'=>1,__('Lend Item')=>array()));
	}

	// function called after insert new element in order to add autogenerated rma_id based on year of request and id
    public static function process_request($data, $mode) {
        switch($mode) {
			case 'delete':
				Utils_MessengerCommon::delete_by_id('Custom_LendItem_Event:'.$data['id']);
				break;
            case 'adding':
                $data['active']=true;
                break;
            case 'added':
				// automatically add alerts for selected employees
				$message = $data['items'];
				$start = strtotime($data['limit_date']);
				$eee = array();
				foreach($data['employees'] as $v) {
					$c = CRM_ContactsCommon::get_contact($v);
					if(isset($c['login']))
						$eee[] = $c['login'];
				}
				Utils_MessengerCommon::add('Custom_LendItem_Event:'.$data['id'],'Custom_LendItem', $message, $start, array('Custom_LendItemCommon','get_alarm'),array($data['id']),$eee);
				break;
            default:
                break;
        }
        return $data;
    }
	
	public static function display_title($record, $nolink=false) {
		$ret = Utils_RecordBrowserCommon::create_linked_label_r('custom_lenditem', 'Title', $record, $nolink);
		if (isset($record['items']) && $record['items']!='') $ret = '<span '.Utils_TooltipCommon::open_tag_attrs(Utils_RecordBrowserCommon::format_long_text($record['items']), false).'>'.$ret.'</span>';
		return $ret;
	}
	
	// label watchdog 
	public static function watchdog_label($rid = null, $events = array(), $details = true) {
		return Utils_RecordBrowserCommon::watchdog_label(
				'custom_lenditem',
				_M('Lend Item'),
				$rid,
				$events,
				array('Custom_LendItemCommon','watchdog_label_format'),
				$details
			);
	}

	public static function watchdog_label_format($r) {
		return $r['title'];
	}
	
	public static function get_alarm($id) {
		$a = self::get_lend($id);

		if (!$a) return __('Private record');

		$date = __('Timeless event: %s',array(Base_RegionalSettingsCommon::time2reg($a['limit_date'],false)));
		
		return $date."\n".__('Title: %s',array($a['title']));
	}
	
	public static function get_lend($id) {
		return Utils_RecordBrowserCommon::get_record('custom_lenditem', $id);
	}
	
	public static function employees_crits(){
		return array('(company_name'=>CRM_ContactsCommon::get_main_company(),'|related_companies'=>array(CRM_ContactsCommon::get_main_company()));
	}
	
	public static function display_employees($record, $nolink, $desc) {
		return CRM_ContactsCommon::display_contacts_with_notification('custom_lenditem', $record, $nolink, $desc);
	}
	
	public static function crm_calendar_handler($action) {
		$args = func_get_args();
		array_shift($args);
		$ret = null;
		switch ($action) {
			case 'get_all': $ret = call_user_func_array(array('Custom_LendItemCommon','crm_event_get_all'), $args);
							break;
			case 'get': $ret = call_user_func_array(array('Custom_LendItemCommon','crm_event_get'), $args);
							break;
			case 'recordset': $ret = 'custom_lenditem';
							break;
		}
		return $ret;
	}
	
	public static function crm_event_get($id, $day = null) {
		if (!is_array($id)) {
			$id = explode('_', $id);
			if (isset($id[1]) && $day===null) $day = $id[1];
			$id = reset($id);
			$r = Utils_RecordBrowserCommon::get_record('custom_lenditem', $id);
		} else {
			$r = $id;
			$id = $r['id'];
		}

		$next = array('type'=>__('Lend Item'));
		$day = $r['limit_date'];
		$iday = strtotime($day);
		$next['id'] = $r['id'];
		
		$base_unix_time = strtotime(date('1970-01-01 00:00:00'));
		$next['start'] = date('Y-m-d',$iday);
		$next['end'] = date('Y-m-d',$iday);
		$next['start'] = strtotime($next['start']);
		$next['end'] = strtotime($next['end']);
		$next['duration'] = -1;

		$next['timeless'] = $day;
		$next['title'] = (string)$r['title'];
		$next['description'] = (string)$r['items'];
		$next['color'] = 'gray';
		if ($r['status']==0 || $r['status']==1)
			switch ($r['priority']) {
				case 0: $next['color'] = 'green'; break;
				case 1: $next['color'] = 'yellow'; break;
				case 2: $next['color'] = 'red'; break;
			}
		if ($r['status']==2)
			$next['color'] = 'blue';
		if ($r['status']==3)
			$next['color'] = 'gray';

		$next['view_action'] = Utils_RecordBrowserCommon::create_record_href('custom_lenditem', $r['id'], 'view', array('day'=>$day));
		$next['edit_action'] = false;
		$next['move_action'] = false;
		
		if (Utils_RecordBrowserCommon::get_access('custom_lenditem','delete', $r)==false)
			$next['delete_action'] = false;

        $start_time = Base_RegionalSettingsCommon::time2reg($next['start'],2,false,true);
        $event_date = Base_RegionalSettingsCommon::time2reg($next['start'],false,3,true);
        $end_time = Base_RegionalSettingsCommon::time2reg($next['end'],2,false,true);

        $inf2 = array( __('Date')=>'<b>'.$event_date.'</b>' );
		$inf2 += array(__('Time')=>__('Timeless event'));
		
		$emps = array();
		foreach ($r['employees'] as $e) {
			$e = CRM_ContactsCommon::contact_format_no_company($e, true);
			$e = str_replace('&nbsp;',' ',$e);
			if (mb_strlen($e,'UTF-8')>33) $e = mb_substr($e , 0, 30, 'UTF-8').'...';
			$emps[] = $e;
		}

		$inf2 += array(	__('Event')=> '<b>'.$next['title'].'</b>',
						__('Description')=> $next['description'],
						__('Assigned to')=> implode('<br>',$emps),
						__('Status')=> Utils_CommonDataCommon::get_value('Custom/LendItem/Status/'.$r['status'],true),
						__('Priority')=> Utils_CommonDataCommon::get_value('Custom/LendItem/Priority/'.$r['priority'],true)
					);

		$next['employees'] = $r['employees'];
		$next['status'] = $r['status']<=2?'active':'closed';
		$next['custom_tooltip'] = 
									'<center><b>'.
										__('Lend Item').
									'</b></center><br>'.
									Utils_TooltipCommon::format_info_tooltip($inf2).'<hr>'.
									CRM_ContactsCommon::get_html_record_info($r['created_by'],$r['created_on'],null,null);
		return $next;
	}

	public static function crm_event_get_all($start, $end, $filter=null, $customers=null) {
		
		$start = date('Y-m-d',Base_RegionalSettingsCommon::reg2time($start));
		$crits = array();
		
		if ($filter===null) $filter = CRM_FiltersCommon::get();
		$f_array = explode(',',trim($filter,'()'));
		if($filter!='()' && $filter)
			$crits['('.'employees'] = $f_array;
		if ($customers && !empty($customers)) 
			$crits['|customer'] = $customers;
		elseif($filter!='()' && $filter) {
			$crits['|customer'] = $f_array;
			foreach ($crits['|customer'] as $k=>$v)
				$crits['|customer'][$k] = 'P:'.$v;
		}
		//$critsb = $crits;
		
		$crits['<=limit_date'] = $end;
		$crits['>=limit_date'] = $start;
		
		$count = 0;
		$ret = Utils_RecordBrowserCommon::get_records('custom_lenditem', $crits, array(), array('limit_date' => 'DESC'), CRM_CalendarCommon::$events_limit);

		$result = array();
		foreach ($ret as $r)
			$result[] = self::crm_event_get($r);

		return $result;
	}

}
 
?>